
*
*
* Copyright 2010 Sun Microsystems, Inc. All rights reserved.
*
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
*
* The contents of this file are subject to the terms of the Common
* Development and Distribution License("CDDL") (the "License").
* You may not use this file except in compliance with the License.
*
* You can obtain a copy of the License at http://www.sun.com/cddl/cddl.html
* or ../vdbench/license.txt. See the License for the
* specific language governing permissions and limitations under the License.
*
* When distributing the software, include this License Header Notice
* in each file and include the License file at ../vdbench/licensev1.0.txt.
*
* If applicable, add the following below the License Header, with the
* fields enclosed by brackets [] replaced by your own identifying information:
* "Portions Copyrighted [year] [name of copyright owner]"
*

*
* Author: Henk Vandenbergh.
*


*Example 4: Complex run, curves with different transfer sizes

sd=sd1,lun=/dev/rdsk/c0t0d0s0
wd=wd1,sd=sd1,rdpct=100
rd=run1,wd=wd1,io=curve,el=10,in=1,forx=(1k-64k,d)

*This generates 49 workload executions: 7 curve runs (one to determine max i/o rate and 6 data points for 10, 50, 70, 80, 90, 100%) for 7 different transfer sizes each. First 7 runs for 1k, then 7 runs for 2k, etc.

*Add 'forthreads=(1-64,d)', and we go to 7 * 49 = 343 workload executions. This is why it is helpful doing a simulated run first by adding '-s' to your execution: 'java vdbench -fparmfile -s'.

